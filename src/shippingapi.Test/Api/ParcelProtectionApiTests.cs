/* 
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using shippingapi.Client;
using shippingapi.Api;
using shippingapi.Model;

namespace shippingapi.Test
{
    /// <summary>
    ///  Class for testing ParcelProtectionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ParcelProtectionApiTests
    {
        private ParcelProtectionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ParcelProtectionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ParcelProtectionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ParcelProtectionApi
            //Assert.IsInstanceOf(typeof(ParcelProtectionApi), instance);
        }

        
        /// <summary>
        /// Test CancelParcelProtection
        /// </summary>
        [Test]
        public void CancelParcelProtectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xPBTransactionId = null;
            //string parcelProtectionReferenceId = null;
            //VoidParcelProtectionRequest voidParcelProtectionRequest = null;
            //bool? xPBUnifiedErrorStructure = null;
            //var response = instance.CancelParcelProtection(xPBTransactionId, parcelProtectionReferenceId, voidParcelProtectionRequest, xPBUnifiedErrorStructure);
            //Assert.IsInstanceOf(typeof(VoidParcelProtectionResponse), response, "response is VoidParcelProtectionResponse");
        }
        
        /// <summary>
        /// Test GetParcelProtectionCoverage
        /// </summary>
        [Test]
        public void GetParcelProtectionCoverageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xPBTransactionId = null;
            //ParcelProtectionCreateRequest parcelProtectionCreateRequest = null;
            //bool? xPBUnifiedErrorStructure = null;
            //var response = instance.GetParcelProtectionCoverage(xPBTransactionId, parcelProtectionCreateRequest, xPBUnifiedErrorStructure);
            //Assert.IsInstanceOf(typeof(ParcelProtectionCreateResponse), response, "response is ParcelProtectionCreateResponse");
        }
        
        /// <summary>
        /// Test GetParcelProtectionQuote
        /// </summary>
        [Test]
        public void GetParcelProtectionQuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xPBTransactionId = null;
            //ParcelProtectionQuoteRequest parcelProtectionQuoteRequest = null;
            //bool? xPBUnifiedErrorStructure = null;
            //var response = instance.GetParcelProtectionQuote(xPBTransactionId, parcelProtectionQuoteRequest, xPBUnifiedErrorStructure);
            //Assert.IsInstanceOf(typeof(ParcelProtectionQuoteResponse), response, "response is ParcelProtectionQuoteResponse");
        }
        
        /// <summary>
        /// Test GetParcelProtectionReports
        /// </summary>
        [Test]
        public void GetParcelProtectionReportsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xPBTransactionId = null;
            //string developerId = null;
            //string policyCreatedFromDate = null;
            //bool? xPBUnifiedErrorStructure = null;
            //string policyCreatedToDate = null;
            //string policyReferenceId = null;
            //string parcelTrackingNumber = null;
            //string merchantId = null;
            //string policyStatus = null;
            //string size = null;
            //string page = null;
            //string sort = null;
            //var response = instance.GetParcelProtectionReports(xPBTransactionId, developerId, policyCreatedFromDate, xPBUnifiedErrorStructure, policyCreatedToDate, policyReferenceId, parcelTrackingNumber, merchantId, policyStatus, size, page, sort);
            //Assert.IsInstanceOf(typeof(ParcelProtectionPolicyResponse), response, "response is ParcelProtectionPolicyResponse");
        }
        
    }

}
